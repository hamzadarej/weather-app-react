{"version":3,"sources":["config.js","components/weather.js","App.js","index.js"],"names":["module","exports","apiKey","Weather","useState","userInput","setUserInput","weatherData","setWeatherData","direction","wind","deg","findDirection","start","end","find","dir","windDirection","useEffect","JSON","parse","localStorage","getItem","year","Date","getFullYear","className","weather","main","onSubmit","e","endpoint","preventDefault","setTimeout","axios","get","keys","then","setItem","stringify","data","catch","err","console","log","type","value","placeholder","onChange","target","id","name","sys","country","toLocaleDateString","weekday","day","month","temp","toFixed","feels_like","src","icon","alt","temp_min","temp_max","speed","gust","humidity","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e1fbe30.chunk.js","sourcesContent":["module.exports = {\n  apiKey: \"8f454866080dc3c8718984533d42e401\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport keys from \"../config\";\nconst Weather = () => {\n  const baseUrl = \"https://api.openweathermap.org/data/2.5/\";\n\n  const [userInput, setUserInput] = useState(\"leipzig\");\n  const [weatherData, setWeatherData] = useState();\n  const getWeather = (endpoint) => {\n    axios\n      .get(`${baseUrl}weather?q=${endpoint}&units=metric&appid=${keys.apiKey}`)\n      .then((weather) =>\n        localStorage.setItem(\"weather\", JSON.stringify(weather.data))\n      )\n      .catch((err) => console.log(\"Please type an existing city name\"));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setTimeout(() => {\n      setWeatherData(JSON.parse(localStorage.getItem(\"weather\")))\n    }, 2000);\n\n    getWeather(userInput);\n  };\n\n  const direction = weatherData?.wind?.deg;\n  const windD = [\n    { direction: \"N\", start: 310, end: 360 },\n    { direction: \"N\", start: 1, end: 50 },\n    { direction: \"W\", start: 230, end: 309 },\n    { direction: \"S\", start: 130, end: 229 },\n    { direction: \"E\", start: 49, end: 129 },\n  ];\n\n  const findDirection = windD.find(\n    (dir) => dir.start <= direction && dir.end >= direction\n  );\n  const windDirection = findDirection?.direction;\n\n  useEffect(() => {\n    //default city\n    setWeatherData(JSON.parse(localStorage.getItem(\"weather\")))\n  }, []);\n  //console.log(weatherData);\n  // the time\n  const year = new Date();\n  const getFullYear = year.getFullYear();\n  const getDayName = () => {\n    return year.toLocaleDateString(\"en-US\", { weekday: \"long\" });\n  };\n  const getTime = () => {\n    return year.toLocaleDateString(\"en-US\", { day: \"numeric\" });\n  };\n  const getMonthName = () => {\n    return year.toLocaleDateString(\"en-US\", { month: \"long\" });\n  };\n //console.log(weatherData?.weather[0]?.main)\n  return (\n    <div className={`${weatherData?.weather[0]?.main}  app-wrap`}>\n      <header>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={userInput}\n            placeholder=\"enter a city name\"\n            onChange={(e) => setUserInput(e.target.value)}\n          />\n          <input type=\"submit\" id=\"submit\" value=\"Search\" />\n        </form>\n      </header>\n      {weatherData?.main && (\n        <main>\n          <section className=\"location\">\n            <div className=\"city\">\n              {\" \"}\n              {weatherData.name}, {weatherData.sys.country}\n            </div>\n            <div className=\"date\">\n              {getDayName()} {getTime()} {getMonthName()} {getFullYear}\n            </div>\n          </section>\n          <div className=\"current\">\n            <div className=\"temp\">\n              <span className=\"tempN\" id=\"temp\">\n                {weatherData.main.temp.toFixed()}\n              </span>\n              <span>째</span>\n            </div>\n            <div className=\"feelsContainer\">\n              Feels like{\" \"}\n              <span className=\"feels\">\n                {weatherData.main.feels_like.toFixed()}\n              </span>\n              <span>째</span>\n            </div>\n\n            <img\n              src={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\n              className=\"icon\"\n              alt=\"\"\n            />\n\n            <div className=\"weather\">{weatherData.weather[0].main}</div>\n            <div className=\"hi-low\">\n              Max {weatherData.main.temp_min.toFixed()}째 / Min{\" \"}\n              {weatherData.main.temp_max.toFixed()}째\n            </div>\n            <div className=\"wind\">\n              <i className=\"fas fa-wind\"></i>\n              <div>\n                Wind direction: <div className=\"windDeg\">{windDirection}</div>\n              </div>\n              <div>\n                Speed:{\" \"}\n                <span className=\"windSpeed\">{weatherData.wind.speed}km/h</span>\n              </div>\n              <div>\n                Max-gust:{\" \"}\n                <span className=\"windGust\">{weatherData.wind.gust}km/h</span>\n              </div>\n            </div>\n            <div className=\"hum-img\">\n              <i className=\"fas fa-water\"></i>\n\n              <div className=\"humidity\">\n                {\" \"}\n                Humidity:{weatherData.main.humidity}%\n              </div>\n            </div>\n          </div>\n        </main>\n      )}\n    </div>\n  );\n};\nexport default Weather;\n","import Weather from \"./components/weather\";\nimport React from \"react\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./sass/main.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}